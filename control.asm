; Listing generated by Microsoft (R) Optimizing Compiler Version 19.10.25019.0 

	TITLE	c:\hub\branching\control.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_while_loop_signed
PUBLIC	_while_loop_unsigned
PUBLIC	_do_while_loop_signed
PUBLIC	_do_while_loop_unsigned
PUBLIC	_main
PUBLIC	??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@		; `string'
PUBLIC	??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@		; `string'
PUBLIC	??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@		; `string'
PUBLIC	??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@		; `string'
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	_atoi:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@
CONST	SEGMENT
??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@ DB 'in GTE loop', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@
CONST	SEGMENT
??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@ DB 'in GT loop', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@
CONST	SEGMENT
??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@ DB 'in LTE loop', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@
CONST	SEGMENT
??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@ DB 'in LT loop', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogspy
; File c:\hub\branching\control.c
;	COMDAT _main
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT

; 151  :   int x;
; 152  :   uint32_t u;
; 153  :   
; 154  :   x = atoi(argv[1]);

	mov	eax, DWORD PTR _argv$[esp-4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_atoi
	mov	esi, eax

; 155  :   u = x;
; 156  :   
; 157  :   while_loop_signed(x);

	push	esi
	call	_while_loop_signed
	pop	ecx
	pop	ecx

; 158  :   while_loop_unsigned(u);

	push	esi
	call	_while_loop_unsigned
	pop	esi
$LN4@main:
$LN3@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\hub\branching\control.c
;	COMDAT _do_while_loop_unsigned
_TEXT	SEGMENT
_x$ = 8							; size = 4
_do_while_loop_unsigned PROC				; COMDAT

; 113  : void do_while_loop_unsigned(uint32_t x) {

	push	ebx
	push	esi

; 114  :   uint32_t i;
; 115  :   
; 116  :   i = 0;

	mov	esi, DWORD PTR _x$[esp+4]
	push	edi
	xor	edi, edi
	mov	ebx, edi
$LL4@do_while_l:

; 117  :   
; 118  :   // less than
; 119  :   do {
; 120  :     printf("in LT loop\n");

	push	OFFSET ??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@
	call	_printf

; 121  :     i++;

	inc	ebx
	pop	ecx

; 122  :   } while (i < x);

	cmp	ebx, esi
	jb	SHORT $LL4@do_while_l
$LL7@do_while_l:

; 123  :   
; 124  :   i = 0;
; 125  :   
; 126  :   // less than or equal
; 127  :   do {
; 128  :     printf("in LTE loop\n");

	push	OFFSET ??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@
	call	_printf

; 129  :     i++;

	inc	edi
	pop	ecx

; 130  :   } while (i <= x); 

	cmp	edi, esi
	jbe	SHORT $LL7@do_while_l
$LL10@do_while_l:

; 131  : 
; 132  :   i = x;
; 133  :   
; 134  :   // greater than
; 135  :   do {
; 136  :     printf("in GT loop\n");

	push	OFFSET ??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@
	call	_printf
	pop	ecx

; 137  :     i--;

	sub	esi, 1

; 138  :   } while (i > 0);   

	jne	SHORT $LL10@do_while_l
$LL13@do_while_l:

; 139  :   
; 140  :   i = x;
; 141  :   // greater than or equal
; 142  :   do {
; 143  :     printf("in GTE loop\n");

	push	OFFSET ??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@
	call	_printf
	pop	ecx

; 144  :     i--;
; 145  :   } while (i >= 0);  

	jmp	SHORT $LL13@do_while_l
_do_while_loop_unsigned ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\hub\branching\control.c
;	COMDAT _do_while_loop_signed
_TEXT	SEGMENT
_x$ = 8							; size = 4
_do_while_loop_signed PROC				; COMDAT

; 78   : void do_while_loop_signed(int x) {

	push	ebx
	push	esi

; 79   :   int i;
; 80   :   
; 81   :   i = 0;

	mov	esi, DWORD PTR _x$[esp+4]
	push	edi
	xor	edi, edi
	mov	ebx, edi
$LL4@do_while_l:

; 82   :   
; 83   :   // less than
; 84   :   do {
; 85   :     printf("in LT loop\n");

	push	OFFSET ??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@
	call	_printf

; 86   :     i++;

	inc	ebx
	pop	ecx

; 87   :   } while (i < x);

	cmp	ebx, esi
	jl	SHORT $LL4@do_while_l
$LL7@do_while_l:

; 88   :   
; 89   :   i = 0;
; 90   :   
; 91   :   // less than or equal
; 92   :   do {
; 93   :     printf("in LTE loop\n");

	push	OFFSET ??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@
	call	_printf

; 94   :     i++;

	inc	edi
	pop	ecx

; 95   :   } while (i <= x); 

	cmp	edi, esi
	jle	SHORT $LL7@do_while_l

; 96   : 
; 97   :   i = x;

	mov	edi, esi
$LL10@do_while_l:

; 98   :   
; 99   :   // greater than
; 100  :   do {
; 101  :     printf("in GT loop\n");

	push	OFFSET ??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@
	call	_printf

; 102  :     i--;

	dec	edi
	pop	ecx

; 103  :   } while (i > 0);   

	test	edi, edi
	jg	SHORT $LL10@do_while_l
$LL13@do_while_l:

; 104  :   
; 105  :   i = x;
; 106  :   // greater than or equal
; 107  :   do {
; 108  :     printf("in GTE loop\n");

	push	OFFSET ??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@
	call	_printf

; 109  :     i--;

	sub	esi, 1
	pop	ecx

; 110  :   } while (i >= 0);  

	jns	SHORT $LL13@do_while_l

; 111  : }

	pop	edi
	pop	esi
	pop	ebx
	ret	0
_do_while_loop_signed ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\hub\branching\control.c
;	COMDAT _while_loop_unsigned
_TEXT	SEGMENT
_x$ = 8							; size = 4
_while_loop_unsigned PROC				; COMDAT

; 42   : void while_loop_unsigned(uint32_t x) {

	push	esi

; 43   :   uint32_t i;
; 44   :   
; 45   :   i = 0;
; 46   :   
; 47   :   // less than
; 48   :   while (i < x) {

	mov	esi, DWORD PTR _x$[esp]
	push	edi
	test	esi, esi
	je	SHORT $LN3@while_loop
	mov	edi, esi
$LL2@while_loop:

; 49   :     printf("in LT loop\n");

	push	OFFSET ??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@
	call	_printf
	pop	ecx
	sub	edi, 1
	jne	SHORT $LL2@while_loop
$LN3@while_loop:

; 50   :     i++;
; 51   :   }
; 52   :   
; 53   :   i = 0;
; 54   :   
; 55   :   // less than or equal
; 56   :   while (i <= x) {

	lea	edi, DWORD PTR [esi+1]
$LL4@while_loop:

; 57   :     printf("in LTE loop\n");

	push	OFFSET ??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@
	call	_printf
	pop	ecx
	sub	edi, 1
	jne	SHORT $LL4@while_loop

; 58   :     i++;
; 59   :   }
; 60   : 
; 61   :   i = x;
; 62   :   
; 63   :   // greater than
; 64   :   while (i > 0) {

	test	esi, esi
	je	SHORT $LL8@while_loop
$LL6@while_loop:

; 65   :     printf("in GT loop\n");

	push	OFFSET ??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@
	call	_printf
	pop	ecx

; 66   :     i--;

	sub	esi, 1
	jne	SHORT $LL6@while_loop
$LL8@while_loop:

; 67   :   }    
; 68   :   
; 69   :   i = x;
; 70   :   // greater than or equal
; 71   :   while (i >= 0) {
; 72   :     printf("in GTE loop\n");

	push	OFFSET ??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@
	call	_printf
	pop	ecx
	jmp	SHORT $LL8@while_loop
_while_loop_unsigned ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\hub\branching\control.c
;	COMDAT _while_loop_signed
_TEXT	SEGMENT
_x$ = 8							; size = 4
_while_loop_signed PROC					; COMDAT

; 7    : void while_loop_signed(int x) {

	push	esi

; 8    :   int i;
; 9    :   
; 10   :   i = 0;
; 11   :   
; 12   :   // less than
; 13   :   while (i < x) {

	mov	esi, DWORD PTR _x$[esp]
	push	edi
	test	esi, esi
	jle	SHORT $LN27@while_loop
	mov	edi, esi
$LL2@while_loop:

; 14   :     printf("in LT loop\n");

	push	OFFSET ??_C@_0M@PDFGKNGG@in?5LT?5loop?6?$AA@
	call	_printf
	pop	ecx
	sub	edi, 1
	jne	SHORT $LL2@while_loop

; 15   :     i++;
; 16   :   }
; 17   :   
; 18   :   i = 0;
; 19   :   
; 20   :   // less than or equal
; 21   :   while (i <= x) {

	test	esi, esi
$LN27@while_loop:
	js	SHORT $LN5@while_loop
	lea	edi, DWORD PTR [esi+1]
$LL4@while_loop:

; 22   :     printf("in LTE loop\n");

	push	OFFSET ??_C@_0N@JCOFBDHJ@in?5LTE?5loop?6?$AA@
	call	_printf
	pop	ecx
	sub	edi, 1
	jne	SHORT $LL4@while_loop
$LN5@while_loop:

; 23   :     i++;
; 24   :   }
; 25   : 
; 26   :   i = x;

	mov	edi, esi

; 27   :   
; 28   :   // greater than
; 29   :   while (i > 0) {

	test	esi, esi
	jle	SHORT $LN28@while_loop
$LL6@while_loop:

; 30   :     printf("in GT loop\n");

	push	OFFSET ??_C@_0M@HBADDDLL@in?5GT?5loop?6?$AA@
	call	_printf

; 31   :     i--;

	dec	edi
	pop	ecx
	test	edi, edi
	jg	SHORT $LL6@while_loop

; 32   :   }    
; 33   :   
; 34   :   i = x;
; 35   :   // greater than or equal
; 36   :   while (i >= 0) {

	test	esi, esi
$LN28@while_loop:
	js	SHORT $LN9@while_loop
$LL8@while_loop:

; 37   :     printf("in GTE loop\n");

	push	OFFSET ??_C@_0N@GKAFOIIO@in?5GTE?5loop?6?$AA@
	call	_printf

; 38   :     i--;

	sub	esi, 1
	pop	ecx
	jns	SHORT $LL8@while_loop
$LN9@while_loop:
	pop	edi
	pop	esi

; 39   :   }  
; 40   : }

	ret	0
_while_loop_signed ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\program files (x86)\windows kits\10\include\10.0.15063.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 953  :         int _Result;
; 954  :         va_list _ArgList;
; 955  :         __crt_va_start(_ArgList, _Format);
; 956  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	1
	call	___acrt_iob_func
	pop	ecx
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H

; 957  :         __crt_va_end(_ArgList);
; 958  :         return _Result;
; 959  :     }

	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\program files (x86)\windows kits\10\include\10.0.15063.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 641  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H

; 642  :     }

	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
; File c:\program files (x86)\windows kits\10\include\10.0.15063.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :         static unsigned __int64 _OptionsStorage;
; 87   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 88   :     }

	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
